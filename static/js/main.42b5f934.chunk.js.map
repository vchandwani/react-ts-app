{"version":3,"sources":["types/post/data.ts","components/BackDrop/BackDrop.tsx","components/Notification/Notification.tsx","lib/api/index.ts","lib/api/modules/posts/index.ts","store/modules/post/index.ts","components/Post/Post.tsx","store/modules/posts/index.ts","components/DisplayPost/DisplayPost.tsx","lib/validation/post.ts","components/NewPost/PostForm.tsx","components/NewPost/NewPost.tsx","container/Blog.tsx","styles/theme/getMuiTheme.tsx","utils/ThemeWrapper.tsx","store/reducers.ts","store/index.ts","App.tsx","reportWebVitals.ts","index.tsx"],"names":["NotificationType","URL","AUTHOR","useStyles","makeStyles","theme","createStyles","backdrop","zIndex","drawer","color","BackDrop","open","classes","Backdrop","className","data-testid","CircularProgress","root","width","marginTop","spacing","Notification","notificationMsg","notificationType","INFO","useState","notificationOpen","setNotificationOpen","useEffect","styles","Row","Col","xs","Collapse","in","Alert","action","IconButton","aria-label","size","onClick","fontSize","severity","Posts","posts","loadPosts","apiResource","a","url","axios","get","res","results","data","forEach","element","push","author","filter","r","postPost","val","post","status","success","message","deletePost","delete","headers","initialState","isLoading","isLoaded","error","undefined","actioned","editable","createSlice","name","reducers","loadPostStart","state","loadPostComplete","payload","id","loadPostFailed","clearResults","postPostStart","postPostComplete","postPostFailed","actionedClear","editableVal","deletePostStart","deletePostComplete","deletePostFailed","actions","dispatch","concat","toString","api","getPost","postData","PaperComponent","props","handle","cancel","Paper","postDiv","border","boxShadow","boxSizing","position","backgroundColor","height100","height","margin","readMore","left","bottom","info","cursor","Post","title","body","clicked","userId","deleteOperation","keyVal","characterLength","setCharacterLength","fullRead","setFullRead","setOpen","history","useHistory","useDispatch","setNotificationMsg","setNotificationType","useSelector","checkEdit","handleClose","deletePostHandler","SUCCESS","ERROR","Dialog","onClose","maxWidth","fullWidth","DialogContent","DialogTitle","Typography","component","variant","DialogActions","sm","md","Card","join","Body","Title","length","substring","Text","Grid","container","direction","justify","alignItems","item","Nav","Link","loadPostsStart","loadPostsComplete","loadPostsFailed","deleteResult","newPosts","loadMoreDiv","textAlign","loadMore","background","palette","primary","main","light","DisplayPost","selectedPost","setSelectedPost","clickCounter","setClickCounter","deleteCounter","setDeleteCounter","loadedPost","setLoadedPost","loadData","checkDelete","i","slice","map","index","Button","PostSchema","object","shape","string","trim","required","min","form","submit","tickIcon","crossIcon","PostForm","formValues","handleSubmit","backClick","onSubmit","values","initialValues","enableReinitialize","validationSchema","setSubmitting","errors","touched","handleBlur","handleChange","type","errorMsg","field","meta","TextField","value","autoFocus","label","autoComplete","InputProps","endAdornment","InputAdornment","inputProps","helperText","multiline","rowsMax","Select","disabled","postForm","display","flexDirection","newPost","button","NewPost","initial","useMemo","setFormValues","result","errorMessage","Blog","Container","Navbar","collapseOnSelect","expand","bg","to","Brand","Toggle","aria-controls","as","path","exact","customColors","hover","createMuiTheme","secondary","overridesOptions","overrides","MuiInput","underline","borderBottom","divider","dark","ThemeWrapper","children","ThemeProvider","muiTheme","rootReducer","combineReducers","postsReducer","postReducer","store","configureStore","reducer","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","persistStore","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.42b5f934.chunk.js","sourcesContent":["export interface PostDataObj {\r\n  id?: number;\r\n  userId: number;\r\n  title: string;\r\n  body: string;\r\n  author?: string;\r\n}\r\n\r\nexport enum NotificationType {\r\n  ERROR = 'error',\r\n  WARNING = 'warning',\r\n  INFO = 'info',\r\n  SUCCESS = 'success',\r\n}\r\n\r\nexport type Obj = Record<string, string | null | boolean>;\r\nexport type Values = Record<\r\n  string,\r\n  string | number | boolean | Date | string[] | Obj | undefined\r\n>;\r\n\r\nexport const URL = 'https://jsonplaceholder.typicode.com/posts';\r\n\r\nexport const AUTHOR = 'Varun';\r\nexport const USERID = 1;\r\n","import React from 'react';\r\nimport Backdrop from '@material-ui/core/Backdrop';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport { makeStyles, createStyles, Theme } from '@material-ui/core/styles';\r\n\r\ninterface BackDropProps {\r\n  open?: boolean;\r\n}\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    backdrop: {\r\n      zIndex: theme.zIndex.drawer + 1,\r\n      color: '#fff',\r\n    },\r\n  })\r\n);\r\n\r\nconst BackDrop: React.FC<BackDropProps> = ({ open = false }) => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <>\r\n      <Backdrop\r\n        className={classes.backdrop}\r\n        open={open}\r\n        data-testid=\"backDropDiv\"\r\n      >\r\n        <CircularProgress color=\"inherit\" data-testid=\"circularDiv\" />\r\n      </Backdrop>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default BackDrop;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Col, Row } from 'react-bootstrap';\r\nimport { Collapse, IconButton } from '@material-ui/core';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport Alert from '@material-ui/lab/Alert';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { NotificationType } from '../../types/post/data';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: '100%',\r\n    '& > * + *': {\r\n      marginTop: theme.spacing(2),\r\n    },\r\n  },\r\n}));\r\n\r\ninterface NotificationProps {\r\n  open: boolean;\r\n  notificationMsg: string;\r\n  notificationType?: NotificationType;\r\n}\r\n\r\nconst Notification: React.FC<NotificationProps> = ({\r\n  open = false,\r\n  notificationMsg,\r\n  notificationType = NotificationType.INFO,\r\n}) => {\r\n  const [notificationOpen, setNotificationOpen] = useState<boolean>(open);\r\n  useEffect(() => {\r\n    setNotificationOpen(open);\r\n  }, [open]);\r\n  const styles = useStyles();\r\n  return (\r\n    <Row data-testid=\"notificationDiv\" className={styles.root}>\r\n      <Col xs={12} data-testid=\"notificaitonCol\">\r\n        <Collapse in={notificationOpen} data-testid=\"notificaitonCollapseDiv\">\r\n          <Alert\r\n            action={\r\n              <IconButton\r\n                aria-label=\"close\"\r\n                color=\"inherit\"\r\n                size=\"small\"\r\n                onClick={() => {\r\n                  setNotificationOpen(false);\r\n                }}\r\n                data-testid=\"buttonIcon\"\r\n              >\r\n                <CloseIcon fontSize=\"inherit\" data-testid=\"closeIcon\" />\r\n              </IconButton>\r\n            }\r\n            severity={notificationType}\r\n            data-testid=\"alertContent\"\r\n          >\r\n            {notificationMsg}\r\n          </Alert>\r\n        </Collapse>\r\n      </Col>\r\n    </Row>\r\n  );\r\n};\r\n\r\nexport default Notification;\r\n","import posts from './modules/posts';\r\n\r\nconst Posts = {\r\n  posts,\r\n};\r\n\r\nexport default Posts;\r\n","import axios from 'axios';\r\nimport { AUTHOR, PostDataObj } from '../../../../types/post/data';\r\n\r\nexport interface PostsAPI {\r\n  loadPosts(apiResource: string): Promise<PostDataObj[]>;\r\n  postPost(apiResource: string, val: PostDataObj): Promise<PostPostResult>;\r\n  deletePost(apiResource: string): Promise<PostPostResult>;\r\n}\r\n\r\n// Format of API results\r\n\r\nexport interface PostResponseData {\r\n  userId: number;\r\n  id: number;\r\n  title: string;\r\n  body: string;\r\n}\r\n\r\nexport interface PostsAPIResponse {\r\n  data: PostResponseData[];\r\n}\r\n\r\ninterface PostPostAPIResponse {\r\n  code?: string;\r\n  message?: string;\r\n}\r\n\r\nexport interface PostPostResult {\r\n  success: boolean;\r\n  message: string;\r\n}\r\n\r\n/**\r\n * Posts API\r\n */\r\n\r\nconst posts: PostsAPI = {\r\n  /**\r\n   * Load posts\r\n   */\r\n  loadPosts: async (apiResource: string): Promise<PostDataObj[]> => {\r\n    const url = `${apiResource}`;\r\n    const res = await axios.get(url);\r\n    const results: PostDataObj[] = [];\r\n    if (res.data) {\r\n      res.data.forEach((element: PostResponseData) => {\r\n        if (element) {\r\n          results.push({ ...element, author: AUTHOR });\r\n        }\r\n      });\r\n    }\r\n    return results.filter((r) => r !== null);\r\n  },\r\n  /**\r\n   * Post Post document\r\n   * @param apiResource\r\n   * @param val\r\n   */\r\n  postPost: async (\r\n    apiResource: string,\r\n    val: PostDataObj\r\n  ): Promise<PostPostResult> => {\r\n    const url = `${apiResource}`;\r\n    const res = await axios.post<PostPostAPIResponse>(url, val);\r\n\r\n    if (res.status !== 201) {\r\n      return {\r\n        success: false,\r\n        message: res.data.message || 'Unknown error',\r\n      };\r\n    }\r\n    return {\r\n      success: true,\r\n      message: res.data.message || 'Success',\r\n    };\r\n  },\r\n\r\n  /**\r\n   * Delete post\r\n   * @param apiResource\r\n   */\r\n  deletePost: async (apiResource: string): Promise<PostPostResult> => {\r\n    const url = `${apiResource}`;\r\n    const res = await axios.delete<PostPostAPIResponse>(url, {\r\n      headers: {\r\n        'Content-Type': 'application/json; carset=UTF-8',\r\n        'Access-Control-Allow-Origin': '*',\r\n      },\r\n    });\r\n    if (res && res?.status !== 200) {\r\n      return {\r\n        success: false,\r\n        message: res?.data?.message || 'Unknown error',\r\n      };\r\n    }\r\n    return {\r\n      success: true,\r\n      message: res?.data?.message || 'Success',\r\n    };\r\n  },\r\n};\r\n\r\nexport default posts;\r\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit';\r\n// eslint-disable-next-line import/no-cycle\r\nimport { AppThunk } from '../../../types';\r\nimport { PostDataObj } from '../../../types/post/data';\r\n// eslint-disable-next-line import/no-cycle\r\nimport { AppDispatch } from '../../index';\r\nimport api from '../../../lib/api';\r\nimport { PostPostResult } from '../../../lib/api/modules/posts';\r\n\r\nexport interface PostState {\r\n  isLoading: boolean;\r\n  isLoaded: boolean;\r\n  error: string | undefined;\r\n  post: PostDataObj | undefined;\r\n  actioned?: boolean;\r\n  editable: boolean;\r\n}\r\n\r\nexport const initialState: PostState = {\r\n  isLoading: false,\r\n  isLoaded: true,\r\n  error: undefined,\r\n  post: undefined,\r\n  actioned: false,\r\n  editable: false,\r\n};\r\n\r\nexport interface PostActionPayload {\r\n  results?: PostDataObj[] | undefined;\r\n  error?: string | undefined;\r\n}\r\nexport interface EditablePayload {\r\n  editable: boolean;\r\n}\r\n\r\n//\r\n// post redux module\r\n//\r\nconst post = createSlice({\r\n  name: 'post',\r\n  initialState,\r\n  reducers: {\r\n    // Start loading documents\r\n    loadPostStart(state): void {\r\n      // eslint-disable-next-line no-param-reassign\r\n      state.isLoading = true;\r\n      // eslint-disable-next-line no-param-reassign\r\n      state.isLoaded = false;\r\n      // eslint-disable-next-line no-param-reassign\r\n      state.error = undefined;\r\n    },\r\n\r\n    // Documents loaded\r\n    loadPostComplete(state, { payload }: PayloadAction<PostDataObj>): void {\r\n      // eslint-disable-next-line no-param-reassign\r\n      state.isLoaded = true;\r\n      // eslint-disable-next-line no-param-reassign\r\n      state.isLoading = false;\r\n\r\n      if (payload.id) {\r\n        // eslint-disable-next-line no-param-reassign\r\n        state.post = { ...payload };\r\n      }\r\n    },\r\n\r\n    // posts load failed\r\n    loadPostFailed(state): void {\r\n      // eslint-disable-next-line no-param-reassign\r\n      state.isLoaded = true;\r\n      // eslint-disable-next-line no-param-reassign\r\n      state.isLoading = false;\r\n      // eslint-disable-next-line no-param-reassign\r\n      state.error = 'Unknown error';\r\n    },\r\n\r\n    // Clear current results\r\n    clearResults(state): void {\r\n      // eslint-disable-next-line no-param-reassign\r\n      state.post = undefined;\r\n      // eslint-disable-next-line no-param-reassign\r\n      state.isLoaded = true;\r\n      // eslint-disable-next-line no-param-reassign\r\n      state.isLoading = false;\r\n      // eslint-disable-next-line no-param-reassign\r\n      state.error = undefined;\r\n      // eslint-disable-next-line no-param-reassign\r\n      state.actioned = false;\r\n    },\r\n\r\n    postPostStart(state): void {\r\n      // eslint-disable-next-line no-param-reassign\r\n      state.isLoading = true;\r\n      // eslint-disable-next-line no-param-reassign\r\n      state.isLoaded = false;\r\n      // eslint-disable-next-line no-param-reassign\r\n      state.error = undefined;\r\n      // eslint-disable-next-line no-param-reassign\r\n      state.actioned = false;\r\n    },\r\n\r\n    // Documents loaded\r\n    postPostComplete(state): void {\r\n      // eslint-disable-next-line no-param-reassign\r\n      state.isLoaded = true;\r\n      // eslint-disable-next-line no-param-reassign\r\n      state.isLoading = false;\r\n      // eslint-disable-next-line no-param-reassign\r\n      state.post = undefined;\r\n      // eslint-disable-next-line no-param-reassign\r\n      state.error = undefined;\r\n      // eslint-disable-next-line no-param-reassign\r\n      state.actioned = true;\r\n    },\r\n\r\n    // posts load failed\r\n    postPostFailed(state, action: PayloadAction<PostActionPayload>): void {\r\n      // eslint-disable-next-line no-param-reassign\r\n      state.isLoaded = true;\r\n      // eslint-disable-next-line no-param-reassign\r\n      state.isLoading = false;\r\n      // eslint-disable-next-line no-param-reassign\r\n      state.error = action.payload.error || 'Unknown error';\r\n      // eslint-disable-next-line no-param-reassign\r\n      state.actioned = false;\r\n    },\r\n    // Clear current results\r\n    actionedClear(state): void {\r\n      // eslint-disable-next-line no-param-reassign\r\n      state.actioned = false;\r\n    },\r\n    // Clear current results\r\n    editableVal(state, { payload }: PayloadAction<EditablePayload>): void {\r\n      // eslint-disable-next-line no-param-reassign\r\n      state.editable = payload.editable;\r\n    },\r\n\r\n    deletePostStart(state): void {\r\n      // eslint-disable-next-line no-param-reassign\r\n      state.isLoading = true;\r\n      // eslint-disable-next-line no-param-reassign\r\n      state.isLoaded = false;\r\n      // eslint-disable-next-line no-param-reassign\r\n      state.error = undefined;\r\n      // eslint-disable-next-line no-param-reassign\r\n      state.actioned = false;\r\n    },\r\n\r\n    // Documents loaded\r\n    deletePostComplete(state): void {\r\n      // eslint-disable-next-line no-param-reassign\r\n      state.isLoaded = true;\r\n      // eslint-disable-next-line no-param-reassign\r\n      state.isLoading = false;\r\n      // eslint-disable-next-line no-param-reassign\r\n      state.post = undefined;\r\n      // eslint-disable-next-line no-param-reassign\r\n      state.error = undefined;\r\n      // eslint-disable-next-line no-param-reassign\r\n      state.actioned = true;\r\n    },\r\n\r\n    // posts load failed\r\n    deletePostFailed(state, action: PayloadAction<PostActionPayload>): void {\r\n      // eslint-disable-next-line no-param-reassign\r\n      state.isLoaded = true;\r\n      // eslint-disable-next-line no-param-reassign\r\n      state.isLoading = false;\r\n      // eslint-disable-next-line no-param-reassign\r\n      state.error = action.payload.error || 'Unable to delete';\r\n      // eslint-disable-next-line no-param-reassign\r\n      state.actioned = false;\r\n    },\r\n  },\r\n});\r\n\r\n// Export actions and reducer\r\nexport const {\r\n  loadPostStart,\r\n  loadPostComplete,\r\n  loadPostFailed,\r\n  postPostStart,\r\n  postPostComplete,\r\n  postPostFailed,\r\n  clearResults,\r\n  actionedClear,\r\n  editableVal,\r\n  deletePostStart,\r\n  deletePostComplete,\r\n  deletePostFailed,\r\n} = post.actions;\r\n\r\nexport default post.reducer;\r\n\r\n// Async actions\r\n\r\n/**\r\n * Load document results based on document type\r\n *\r\n * @param apiResource {String}\r\n * @param documentType {String}\r\n */\r\nexport const loadPost = (data: PostDataObj): AppThunk => async (\r\n  dispatch: AppDispatch\r\n) => {\r\n  dispatch(loadPostStart());\r\n  if (data?.title) {\r\n    dispatch(loadPostComplete(data));\r\n  } else {\r\n    dispatch(loadPostFailed());\r\n  }\r\n};\r\n\r\n// Async actions\r\n\r\n/**\r\n * Load document results based on document type\r\n *\r\n * @param apiResource {String}\r\n * @param documentType {String}\r\n */\r\nexport const postPost = (\r\n  apiResource: string,\r\n  val: PostDataObj\r\n): AppThunk => async (dispatch: AppDispatch) => {\r\n  dispatch(postPostStart());\r\n\r\n  try {\r\n    const result = await api.posts.postPost(apiResource, val);\r\n    const { success } = result;\r\n    if (result && success) {\r\n      dispatch(postPostComplete());\r\n    } else {\r\n      dispatch(postPostFailed({ error: 'Operation dailed' }));\r\n    }\r\n  } catch (error) {\r\n    let errorMessage = error;\r\n    if (error && error.message) {\r\n      errorMessage = error.message;\r\n    }\r\n\r\n    dispatch(\r\n      postPostFailed({\r\n        error: errorMessage,\r\n      })\r\n    );\r\n  }\r\n};\r\n\r\n/**\r\n * Refresh Actioned\r\n *\r\n */\r\nexport const clearActioned = (): AppThunk => async (dispatch: AppDispatch) => {\r\n  dispatch(actionedClear());\r\n};\r\n\r\n/**\r\n *  Post Editable\r\n *\r\n */\r\nexport const setEditable = (editable: boolean): AppThunk => async (\r\n  dispatch: AppDispatch\r\n) => {\r\n  dispatch(editableVal({ editable }));\r\n};\r\n\r\n/**\r\n * Load document results based on document type\r\n *\r\n * @param apiResource {String}\r\n * @param id {String}\r\n */\r\nexport const deletePost = (apiResource: string, id: number): AppThunk => async (\r\n  dispatch: AppDispatch\r\n) => {\r\n  dispatch(deletePostStart());\r\n\r\n  const url: string = `${apiResource}/`.concat(id ? id.toString() : '');\r\n\r\n  try {\r\n    const result = await api.posts.deletePost(url);\r\n\r\n    if (result.success) {\r\n      dispatch(deletePostComplete());\r\n    } else {\r\n      dispatch(deletePostFailed({ error: 'Operation dailed' }));\r\n    }\r\n  } catch (error) {\r\n    dispatch(\r\n      deletePostFailed({\r\n        error: error?.message || 'Operation failed',\r\n      })\r\n    );\r\n  }\r\n};\r\n\r\n/**\r\n * Load document results based on document type\r\n *\r\n * @param apiResource {String}\r\n * @param PostDataObj {String}\r\n */\r\nexport const getPost = (postData: PostDataObj): AppThunk => async (\r\n  dispatch: AppDispatch\r\n) => {\r\n  dispatch(loadPostStart());\r\n  if (postData.id) {\r\n    dispatch(loadPostComplete(postData));\r\n  } else {\r\n    dispatch(loadPostFailed());\r\n  }\r\n};\r\n","import React, { useState, useEffect } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { Col, Card, Nav } from 'react-bootstrap';\r\nimport {\r\n  Grid,\r\n  Button,\r\n  Dialog,\r\n  DialogActions,\r\n  DialogTitle,\r\n  DialogContent,\r\n  Typography,\r\n} from '@material-ui/core';\r\nimport { makeStyles, Theme } from '@material-ui/core/styles';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport Paper, { PaperProps } from '@material-ui/core/Paper';\r\nimport Draggable from 'react-draggable';\r\n\r\nimport { PostDataObj, URL, NotificationType } from '../../types/post/data';\r\nimport BackDrop from '../BackDrop/BackDrop';\r\nimport Notification from '../Notification/Notification';\r\nimport {\r\n  loadPost,\r\n  clearResults,\r\n  deletePost,\r\n  actionedClear,\r\n  setEditable,\r\n} from '../../store/modules/post';\r\nimport { RootState } from '../../store/reducers';\r\n\r\nexport interface PostProps extends PostDataObj {\r\n  clicked(): void;\r\n  deleteOperation(id: number | undefined): void;\r\n  keyVal: string;\r\n}\r\n\r\nfunction PaperComponent(props: PaperProps) {\r\n  return (\r\n    <Draggable\r\n      handle=\"#draggable-dialog-title\"\r\n      cancel={'[class*=\"MuiDialogContent-root\"]'}\r\n    >\r\n      <Paper {...props} />\r\n    </Draggable>\r\n  );\r\n}\r\n\r\nconst useStyles = makeStyles((theme: Theme) => ({\r\n  postDiv: {\r\n    border: '1px solid #eee',\r\n    boxShadow: '0 2px 3px #ccc',\r\n    color: '#808080',\r\n    width: '100%',\r\n    boxSizing: 'border-box',\r\n    position: 'relative',\r\n    '&:hover': {\r\n      backgroundColor: '#cecece',\r\n    },\r\n    '&:active': {\r\n      backgroundColor: '#cecece',\r\n    },\r\n  },\r\n  height100: {\r\n    height: '100%',\r\n  },\r\n  author: {\r\n    margin: theme.spacing(2, 0),\r\n    color: '#ccc',\r\n  },\r\n  readMore: {\r\n    position: 'absolute',\r\n    left: '5px',\r\n    bottom: '5px',\r\n  },\r\n  info: {\r\n    margin: '1rem 0px',\r\n  },\r\n  delete: {\r\n    cursor: 'pointer',\r\n  },\r\n}));\r\n\r\nconst Post = ({\r\n  title,\r\n  author,\r\n  body,\r\n  clicked,\r\n  id,\r\n  userId,\r\n  deleteOperation,\r\n  keyVal,\r\n}: PostProps): JSX.Element => {\r\n  const [characterLength, setCharacterLength] = useState(20);\r\n  const [fullRead, setFullRead] = useState(false);\r\n  const [open, setOpen] = useState<boolean>(false);\r\n  const styles = useStyles({});\r\n  const history = useHistory();\r\n  const dispatch = useDispatch();\r\n  const [notificationOpen, setNotificationOpen] = useState<boolean>(false);\r\n  const [notificationMsg, setNotificationMsg] = useState<string | null>(null);\r\n  const [notificationType, setNotificationType] = useState<NotificationType>(\r\n    NotificationType.INFO\r\n  );\r\n\r\n  const { isLoaded, isLoading, actioned, error } = useSelector(\r\n    (state: RootState) => state.post\r\n  );\r\n\r\n  const readMore = () => {\r\n    setCharacterLength(255);\r\n    setFullRead(true);\r\n  };\r\n\r\n  const checkEdit = () => {\r\n    // check valid id\r\n    dispatch(clearResults());\r\n    dispatch(loadPost({ title, author, body, id, userId }));\r\n    isLoaded && !isLoading && history.push('/newPost');\r\n  };\r\n\r\n  const deleteConfirm = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n    setNotificationOpen(false);\r\n    if (actioned) {\r\n      deleteOperation(id);\r\n    }\r\n    dispatch(actionedClear());\r\n  };\r\n  const deletePostHandler = async () => {\r\n    id && dispatch(deletePost(URL, id));\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (actioned) {\r\n      setNotificationMsg(`Post deleted`);\r\n      setNotificationType(NotificationType.SUCCESS);\r\n      setNotificationOpen(true);\r\n    }\r\n  }, [actioned]);\r\n  useEffect(() => {\r\n    if (error) {\r\n      setNotificationMsg(error);\r\n      setNotificationType(NotificationType.ERROR);\r\n      setNotificationOpen(true);\r\n    }\r\n  }, [error]);\r\n  return (\r\n    <>\r\n      <Dialog\r\n        open={open}\r\n        onClose={handleClose}\r\n        maxWidth=\"md\"\r\n        fullWidth\r\n        PaperComponent={PaperComponent}\r\n        data-testid=\"postDialogDiv\"\r\n      >\r\n        <BackDrop open={isLoading} data-testid=\"backDropDiv\" />\r\n        <DialogContent>\r\n          {notificationOpen && notificationMsg && (\r\n            <Notification\r\n              open={notificationOpen}\r\n              notificationType={notificationType}\r\n              notificationMsg={notificationMsg}\r\n              data-testid=\"notificationDiv\"\r\n            />\r\n          )}\r\n        </DialogContent>\r\n        {!actioned && (\r\n          <>\r\n            <DialogTitle id=\"alert-dialog-title\" data-testid=\"dialogHeader\">\r\n              Are you sure you want to continue?\r\n            </DialogTitle>\r\n            <DialogContent data-testid=\"dialogTitleText\">\r\n              <Typography component=\"h6\" variant=\"h6\">\r\n                Title\r\n              </Typography>\r\n            </DialogContent>\r\n            <DialogContent data-testid=\"dialogTitle\">{title}</DialogContent>\r\n            <DialogContent data-testid=\"contentTitleText\">\r\n              <Typography component=\"h6\" variant=\"h6\">\r\n                Content\r\n              </Typography>\r\n            </DialogContent>\r\n            <DialogContent data-testid=\"dialogBody\">{body}</DialogContent>\r\n          </>\r\n        )}\r\n        <DialogActions data-testid=\"dialogAction\">\r\n          <Button\r\n            data-testid=\"dialogCloseButton\"\r\n            variant=\"contained\"\r\n            color=\"secondary\"\r\n            onClick={handleClose}\r\n          >\r\n            {actioned ? 'Close' : 'Cancel'}\r\n          </Button>\r\n          {!actioned && (\r\n            <Button\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              onClick={deletePostHandler}\r\n              data-testid=\"dialogDeleteButton\"\r\n            >\r\n              Confirm\r\n            </Button>\r\n          )}\r\n        </DialogActions>\r\n      </Dialog>\r\n\r\n      <Col\r\n        xs={12}\r\n        sm={6}\r\n        md={4}\r\n        className=\"mt-1 mb-1\"\r\n        data-testid=\"postCardDiv\"\r\n        key={keyVal}\r\n      >\r\n        <Card\r\n          className={[styles.postDiv, fullRead && styles.height100].join(' ')}\r\n        >\r\n          <Card.Body data-testid=\"postCard\" onClick={clicked}>\r\n            <Card.Title data-testid=\"postTitle\">\r\n              {title?.length > characterLength\r\n                ? title.substring(0, characterLength)\r\n                : title}\r\n            </Card.Title>\r\n            <Card.Text data-testid=\"postContent\">\r\n              {body?.length > characterLength\r\n                ? body.substring(0, characterLength)\r\n                : body}\r\n            </Card.Text>\r\n            {author && <Card.Text data-testid=\"postAuthor\">{author}</Card.Text>}\r\n          </Card.Body>\r\n          <Card.Body>\r\n            <Grid\r\n              container\r\n              direction=\"row\"\r\n              justify=\"space-between\"\r\n              alignItems=\"center\"\r\n              spacing={2}\r\n            >\r\n              <Grid item xs={12} md={6}>\r\n                <Button\r\n                  data-testid=\"readMoreButton\"\r\n                  className=\"ReadMore\"\r\n                  variant=\"contained\"\r\n                  size=\"medium\"\r\n                  color=\"primary\"\r\n                  onClick={readMore}\r\n                  fullWidth\r\n                >\r\n                  Read more\r\n                </Button>\r\n              </Grid>\r\n              {id && (\r\n                <Grid\r\n                  item\r\n                  xs={12}\r\n                  md={6}\r\n                  container\r\n                  direction=\"row\"\r\n                  justify=\"flex-end\"\r\n                  alignItems=\"center\"\r\n                >\r\n                  <Grid onClick={() => dispatch(setEditable(true))}>\r\n                    <Nav.Link\r\n                      onClick={() => checkEdit()}\r\n                      data-testid=\"editLink\"\r\n                    >\r\n                      <EditIcon />\r\n                    </Nav.Link>\r\n                  </Grid>\r\n                  <Grid>\r\n                    <DeleteIcon\r\n                      className={styles.delete}\r\n                      onClick={() => deleteConfirm()}\r\n                      data-testid=\"deleteLink\"\r\n                    />\r\n                  </Grid>\r\n                </Grid>\r\n              )}\r\n            </Grid>\r\n          </Card.Body>\r\n        </Card>\r\n      </Col>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Post;\r\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit';\r\nimport api from '../../../lib/api';\r\n// eslint-disable-next-line import/no-cycle\r\nimport { AppThunk } from '../../../types';\r\nimport { PostDataObj } from '../../../types/post/data';\r\n// eslint-disable-next-line import/no-cycle\r\nimport { AppDispatch } from '../../index';\r\n\r\nexport interface PostsState {\r\n  isLoading: boolean;\r\n  isLoaded: boolean;\r\n  error: string | undefined;\r\n  posts: PostDataObj[];\r\n}\r\n\r\nexport interface PostsActionPayload {\r\n  results?: PostDataObj[] | undefined;\r\n  error?: string | undefined;\r\n}\r\n\r\nexport interface DeleteActionPayload {\r\n  newPosts: Array<PostDataObj>;\r\n}\r\n\r\nexport const initialState: PostsState = {\r\n  isLoading: false,\r\n  isLoaded: false,\r\n  error: undefined,\r\n  posts: [],\r\n};\r\n\r\n//\r\n// posts redux module\r\n//\r\nconst posts = createSlice({\r\n  name: 'posts',\r\n  initialState,\r\n  reducers: {\r\n    // Start loading documents\r\n    loadPostsStart(state): void {\r\n      // eslint-disable-next-line no-param-reassign\r\n      state.isLoading = true;\r\n      // eslint-disable-next-line no-param-reassign\r\n      state.isLoaded = false;\r\n      // eslint-disable-next-line no-param-reassign\r\n      state.error = undefined;\r\n    },\r\n\r\n    // Documents loaded\r\n    loadPostsComplete(\r\n      state,\r\n      { payload }: PayloadAction<PostsActionPayload>\r\n    ): void {\r\n      // eslint-disable-next-line no-param-reassign\r\n      state.isLoaded = true;\r\n      // eslint-disable-next-line no-param-reassign\r\n      state.isLoading = false;\r\n\r\n      if (payload.results) {\r\n        // eslint-disable-next-line no-param-reassign\r\n        state.posts = payload.results;\r\n      }\r\n    },\r\n\r\n    // Posts load failed\r\n    loadPostsFailed(state, action: PayloadAction<PostsActionPayload>): void {\r\n      // eslint-disable-next-line no-param-reassign\r\n      state.isLoaded = false;\r\n      // eslint-disable-next-line no-param-reassign\r\n      state.isLoading = false;\r\n      // eslint-disable-next-line no-param-reassign\r\n      state.error = action.payload.error || 'Unknown error';\r\n    },\r\n\r\n    // Clear current results\r\n    clearResults(state): void {\r\n      // eslint-disable-next-line no-param-reassign\r\n      state = initialState;\r\n    },\r\n\r\n    // delete post\r\n    deleteResult(state, { payload }: PayloadAction<DeleteActionPayload>): void {\r\n      // eslint-disable-next-line no-param-reassign\r\n      state.isLoaded = true;\r\n      // eslint-disable-next-line no-param-reassign\r\n      state.isLoading = false;\r\n      if (payload.newPosts) {\r\n        // eslint-disable-next-line no-param-reassign\r\n        state.posts = payload.newPosts;\r\n      }\r\n    },\r\n  },\r\n});\r\n\r\n// Export actions and reducer\r\nexport const {\r\n  loadPostsStart,\r\n  loadPostsComplete,\r\n  loadPostsFailed,\r\n  clearResults,\r\n  deleteResult,\r\n} = posts.actions;\r\n\r\nexport default posts.reducer;\r\n\r\n// Async actions\r\n\r\n/**\r\n * Load document results based on document type\r\n *\r\n * @param apiResource {String}\r\n * @param documentType {String}\r\n */\r\nexport const loadPosts = (apiResource: string): AppThunk => async (\r\n  dispatch: AppDispatch\r\n) => {\r\n  dispatch(loadPostsStart());\r\n\r\n  try {\r\n    const results = await api.posts.loadPosts(apiResource);\r\n    dispatch(\r\n      loadPostsComplete({\r\n        results,\r\n      })\r\n    );\r\n  } catch (error) {\r\n    dispatch(\r\n      loadPostsFailed({\r\n        error: error?.message || error,\r\n      })\r\n    );\r\n  }\r\n};\r\n\r\n/**\r\n * Delete document deom results\r\n *\r\n * @param id {Number}\r\n */\r\nexport const deletePost = (newPosts: Array<PostDataObj>): AppThunk => async (\r\n  dispatch: AppDispatch\r\n) => {\r\n  dispatch(loadPostsStart());\r\n  dispatch(deleteResult({ newPosts }));\r\n};\r\n","import React, { useEffect, useState } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { Col, Row, Button } from 'react-bootstrap';\r\nimport { makeStyles, Theme } from '@material-ui/core/styles';\r\nimport Post from '../Post/Post';\r\nimport { PostDataObj, URL, NotificationType } from '../../types/post/data';\r\nimport BackDrop from '../BackDrop/BackDrop';\r\nimport Notification from '../Notification/Notification';\r\nimport { loadPosts, clearResults, deletePost } from '../../store/modules/posts';\r\nimport { getPost } from '../../store/modules/post';\r\nimport { RootState } from '../../store/reducers';\r\n\r\nconst useStyles = makeStyles((theme: Theme) => ({\r\n  loadMoreDiv: {\r\n    textAlign: 'center',\r\n    margin: theme.spacing(2, 0),\r\n  },\r\n  loadMore: {\r\n    background: theme.palette.primary.main,\r\n    border: `1px solid ${theme.palette.primary.light}`,\r\n  },\r\n}));\r\n\r\nconst DisplayPost: React.FC = (): JSX.Element => {\r\n  const styles = useStyles({});\r\n  const dispatch = useDispatch();\r\n  const [selectedPost, setSelectedPost] = useState<PostDataObj | undefined>(\r\n    undefined\r\n  );\r\n  const [clickCounter, setClickCounter] = useState<number>(1);\r\n  const [deleteCounter, setDeleteCounter] = useState<number>(0);\r\n  const displayCount: number = 4;\r\n  const [loadedPost, setLoadedPost] = useState<PostDataObj | undefined>(\r\n    undefined\r\n  );\r\n\r\n  const { posts, error, isLoaded, isLoading } = useSelector(\r\n    (state: RootState) => state.posts\r\n  );\r\n  const { post } = useSelector((state: RootState) => state.post);\r\n\r\n  useEffect(() => {\r\n    dispatch(clearResults());\r\n    dispatch(loadPosts(URL));\r\n  }, [dispatch]);\r\n\r\n  useEffect(() => {\r\n    // Make call for selected data\r\n    if (selectedPost) {\r\n      const loadData = async () => {\r\n        if (!loadedPost || (loadedPost && loadedPost.id !== selectedPost.id)) {\r\n          dispatch(getPost(selectedPost));\r\n          setLoadedPost(undefined);\r\n          if (post) {\r\n            setLoadedPost(post);\r\n          }\r\n        }\r\n      };\r\n      loadData();\r\n    }\r\n  }, [selectedPost, loadedPost, post, dispatch]);\r\n\r\n  const postSelectedHandler = (data: PostDataObj) => {\r\n    setSelectedPost(data);\r\n  };\r\n\r\n  const loadMore = () => {\r\n    // incrememnt value\r\n    setClickCounter(clickCounter + 1);\r\n  };\r\n\r\n  const checkDelete = (id: number) => {\r\n    if (id) {\r\n      // remove deleted id from display\r\n      setDeleteCounter(deleteCounter + 1);\r\n      const newPosts: Array<PostDataObj> = posts.filter((i) => i.id !== id);\r\n      dispatch(deletePost(newPosts));\r\n    }\r\n  };\r\n  return (\r\n    <>\r\n      <BackDrop open={isLoading} data-testid=\"backDropDiv\" />\r\n      {error && (\r\n        <Notification\r\n          data-testid=\"notificationDiv\"\r\n          open={true}\r\n          notificationType={NotificationType.ERROR}\r\n          notificationMsg={error}\r\n        />\r\n      )}\r\n\r\n      {isLoaded && posts && (\r\n        <Row data-testid=\"postDataDiv\" key=\"postData\">\r\n          {posts\r\n            .slice(0, clickCounter * displayCount - deleteCounter)\r\n            .map((postData: PostDataObj, index: number) => (\r\n              <Post\r\n                key={'post_'.concat(index.toString())}\r\n                keyVal={'key_'.concat(index.toString())}\r\n                title={postData.title}\r\n                author={postData?.author ? postData?.author : ''}\r\n                body={postData.body}\r\n                id={postData.id}\r\n                userId={postData.userId}\r\n                clicked={() => postSelectedHandler(postData)}\r\n                deleteOperation={(id: number) => checkDelete(id)}\r\n                data-testid=\"postMainDiv\"\r\n              />\r\n            ))}\r\n        </Row>\r\n      )}\r\n      <Row>\r\n        <Col className={styles.loadMoreDiv}>\r\n          <Button\r\n            className={styles.loadMore}\r\n            variant=\"primary\"\r\n            onClick={() => loadMore()}\r\n            data-testid=\"loadMoreButtonDiv\"\r\n          >\r\n            Load More\r\n          </Button>\r\n        </Col>\r\n      </Row>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default DisplayPost;\r\n","import { string, object } from 'yup';\r\n\r\nexport const PostSchema = object().shape({\r\n  // username: string().email('Invalid email address').required('Required'),\r\n  title: string()\r\n    .trim('Invalid')\r\n    .required('Required')\r\n    .min(5, 'Minimum 5 characters!'),\r\n  body: string().required('Required'),\r\n  author: string().required('Required'),\r\n});\r\n","import React from 'react';\r\nimport {\r\n  Grid,\r\n  TextField,\r\n  InputAdornment,\r\n  Select,\r\n  Button,\r\n} from '@material-ui/core';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport CheckCircleIcon from '@material-ui/icons/CheckCircle';\r\nimport ErrorIcon from '@material-ui/icons/Error';\r\n\r\nimport { Formik, Form, Field, FieldProps } from 'formik';\r\nimport { PostDataObj, AUTHOR } from '../../types/post/data';\r\nimport { PostSchema } from '../../lib/validation/post';\r\n\r\ninterface FormProps {\r\n  formValues: PostDataObj;\r\n  handleSubmit(values: PostDataObj): void;\r\n  backClick(): void;\r\n  editable: boolean;\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  form: {\r\n    width: '100%', // Fix IE 11 issue.\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 1),\r\n  },\r\n  tickIcon: {\r\n    color: theme.palette.primary.main,\r\n  },\r\n  crossIcon: {\r\n    color: theme.palette.error.main,\r\n  },\r\n}));\r\nconst PostForm = (props: FormProps): JSX.Element => {\r\n  const { formValues, handleSubmit, backClick, editable } = props;\r\n  const styles = useStyles();\r\n\r\n  const getUsernameEndAdornment = (\r\n    errorMsg: string | undefined\r\n  ): JSX.Element => {\r\n    if (!errorMsg) {\r\n      return (\r\n        <CheckCircleIcon\r\n          data-testid=\"successIcon\"\r\n          className={styles.tickIcon}\r\n        />\r\n      );\r\n    }\r\n    return <ErrorIcon data-testid=\"errorIcon\" className={styles.crossIcon} />;\r\n  };\r\n\r\n  const onSubmit = async (values: PostDataObj) => {\r\n    handleSubmit(values);\r\n  };\r\n\r\n  return (\r\n    <Formik\r\n      initialValues={formValues}\r\n      enableReinitialize\r\n      validationSchema={PostSchema}\r\n      onSubmit={(values, actions) => {\r\n        actions.setSubmitting(false);\r\n        onSubmit(values);\r\n      }}\r\n    >\r\n      {({ errors, handleBlur, handleChange, touched }) => (\r\n        <Form className={styles.form}>\r\n          <Grid\r\n            container\r\n            direction=\"row\"\r\n            justify=\"flex-end\"\r\n            alignItems=\"center\"\r\n          >\r\n            <Grid item xs={12}>\r\n              <Field name=\"title\" type=\"text\">\r\n                {({ field, form, meta }: FieldProps) => (\r\n                  <TextField\r\n                    {...field}\r\n                    value={meta.value}\r\n                    variant=\"filled\"\r\n                    data-testid=\"postFormTitleDiv\"\r\n                    fullWidth\r\n                    autoFocus={true}\r\n                    id=\"title\"\r\n                    label=\"Title\"\r\n                    autoComplete=\"title\"\r\n                    error={meta.touched && meta.error !== undefined}\r\n                    InputProps={{\r\n                      endAdornment: (\r\n                        <InputAdornment position=\"end\">\r\n                          {getUsernameEndAdornment(errors.title)}\r\n                        </InputAdornment>\r\n                      ),\r\n                      inputProps: {\r\n                        'data-testid': 'postFormTitleField',\r\n                      },\r\n                    }}\r\n                    helperText={\r\n                      errors.title && touched.title ? errors.title : null\r\n                    }\r\n                  />\r\n                )}\r\n              </Field>\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <Field name=\"body\" type=\"text\">\r\n                {({ field, form, meta }: FieldProps) => (\r\n                  <TextField\r\n                    multiline\r\n                    rowsMax={4}\r\n                    {...field}\r\n                    variant=\"filled\"\r\n                    fullWidth\r\n                    id=\"body\"\r\n                    autoComplete=\"body\"\r\n                    label=\"Content\"\r\n                    error={meta.touched && meta.error !== undefined}\r\n                    helperText={\r\n                      errors.body && touched.body ? errors.body : null\r\n                    }\r\n                    inputProps={{\r\n                      'data-testid': 'postFormBodyField',\r\n                    }}\r\n                  />\r\n                )}\r\n              </Field>\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <Field name=\"author\" type=\"text\" label=\"Author\">\r\n                {({ field, form, meta }: FieldProps) => (\r\n                  <Select\r\n                    {...field}\r\n                    data-testid=\"\"\r\n                    id=\"author\"\r\n                    variant=\"filled\"\r\n                    fullWidth\r\n                    error={meta.touched && meta.error !== undefined}\r\n                    inputProps={{\r\n                      'data-testid': 'postFormAuthorField',\r\n                    }}\r\n                  >\r\n                    <option value={AUTHOR}>{AUTHOR}</option>\r\n                    <option value=\"Unknown\">Unknown</option>\r\n                  </Select>\r\n                )}\r\n              </Field>\r\n            </Grid>\r\n            <Grid\r\n              container\r\n              direction=\"row\"\r\n              item\r\n              xs={12}\r\n              justify=\"flex-end\"\r\n              spacing={1}\r\n            >\r\n              <Grid item xs={12} sm={3}>\r\n                <Button\r\n                  data-testid=\"postFormBackButton\"\r\n                  variant=\"contained\"\r\n                  color=\"secondary\"\r\n                  fullWidth\r\n                  className={styles.submit}\r\n                  onClick={backClick}\r\n                >\r\n                  Back\r\n                </Button>\r\n              </Grid>\r\n              <Grid item xs={12} sm={3}>\r\n                <Button\r\n                  data-testid=\"postFormSubmitButton\"\r\n                  type=\"submit\"\r\n                  variant=\"contained\"\r\n                  color=\"primary\"\r\n                  fullWidth\r\n                  className={styles.submit}\r\n                  disabled={editable && !formValues?.id}\r\n                >\r\n                  {`${editable ? `Edit` : `Add`} Post`}\r\n                </Button>\r\n              </Grid>\r\n            </Grid>\r\n          </Grid>\r\n        </Form>\r\n      )}\r\n    </Formik>\r\n  );\r\n};\r\n\r\nexport default PostForm;\r\n","import React, { useState, useMemo, useEffect } from 'react';\r\nimport { Col, Row } from 'react-bootstrap';\r\nimport { Grid, Typography } from '@material-ui/core';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport {\r\n  PostDataObj,\r\n  NotificationType,\r\n  URL,\r\n  AUTHOR,\r\n  USERID,\r\n} from '../../types/post/data';\r\nimport BackDrop from '../BackDrop/BackDrop';\r\nimport Notification from '../Notification/Notification';\r\nimport { RootState } from '../../store/reducers';\r\nimport {\r\n  postPost,\r\n  clearActioned,\r\n  clearResults,\r\n} from '../../store/modules/post';\r\nimport PostForm from './PostForm';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  postForm: {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n  },\r\n  newPost: {\r\n    margin: theme.spacing(3),\r\n    border: '1px solid #eee',\r\n    boxShadow: '0 2px 3px #ccc',\r\n    button: {\r\n      '&:hover,&:active': {\r\n        color: 'white',\r\n        backgroundColor: '#fa923f',\r\n      },\r\n    },\r\n  },\r\n}));\r\n\r\nconst NewPost = (): JSX.Element => {\r\n  const { post, isLoaded, isLoading, error, actioned, editable } = useSelector(\r\n    (state: RootState) => state.post\r\n  );\r\n\r\n  const [notificationOpen, setNotificationOpen] = useState<boolean>(false);\r\n  const history = useHistory();\r\n  const dispatch = useDispatch();\r\n\r\n  const [notificationMsg, setNotificationMsg] = useState<string | null>(null);\r\n  const [notificationType, setNotificationType] = useState<NotificationType>(\r\n    NotificationType.INFO\r\n  );\r\n  const styles = useStyles();\r\n  useEffect(() => {\r\n    dispatch(clearActioned());\r\n  }, [dispatch]);\r\n  useEffect(() => {\r\n    if (error) {\r\n      setNotificationMsg(error);\r\n      setNotificationType(NotificationType.ERROR);\r\n      setNotificationOpen(true);\r\n    }\r\n  }, [error]);\r\n  useEffect(() => {\r\n    if (actioned === true) {\r\n      setNotificationMsg(editable ? `Post edited` : `Post added`);\r\n      setNotificationType(NotificationType.SUCCESS);\r\n      setNotificationOpen(true);\r\n    } else {\r\n      setNotificationOpen(false);\r\n    }\r\n  }, [actioned, editable]);\r\n\r\n  const initial: PostDataObj = useMemo(\r\n    () => ({\r\n      userId: post?.userId || USERID,\r\n      author: post?.author || AUTHOR,\r\n      title: post?.title || '',\r\n      body: post?.body || '',\r\n      id: post?.id || undefined,\r\n    }),\r\n    [post]\r\n  );\r\n\r\n  const [formValues, setFormValues] = useState<PostDataObj>({ ...initial });\r\n\r\n  const backClick = (): void => {\r\n    dispatch(clearResults());\r\n    history.push('/');\r\n  };\r\n  const submitClick = (values: PostDataObj): void => {\r\n    setFormValues({ ...values });\r\n    dispatch(postPost(URL, values));\r\n  };\r\n  return (\r\n    <>\r\n      <BackDrop open={isLoading} data-testid=\"backDropDiv\" />\r\n      <Notification\r\n        open={notificationOpen}\r\n        notificationType={notificationType}\r\n        notificationMsg={notificationMsg || ''}\r\n      />\r\n\r\n      <Grid item xs={12} data-testid=\"postFormDiv\">\r\n        <Row className=\"mt-1 mb-1\">\r\n          <Col xs={12}>\r\n            <Typography variant=\"h5\" data-testid=\"postFormHeader\">\r\n              {editable ? 'Edit' : 'Add'} Post\r\n            </Typography>\r\n          </Col>\r\n        </Row>\r\n      </Grid>\r\n      {isLoaded && (\r\n        <Col\r\n          className={(styles.newPost, styles.postForm)}\r\n          data-testid=\"postFormContainer\"\r\n        >\r\n          <PostForm\r\n            formValues={actioned ? initial : formValues}\r\n            handleSubmit={submitClick}\r\n            backClick={backClick}\r\n            editable={editable}\r\n          />\r\n        </Col>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default NewPost;\r\n","import React from 'react';\r\nimport { Container, Row, Col, Navbar, Nav } from 'react-bootstrap';\r\nimport { BrowserRouter as Router, Route, Link, Switch } from 'react-router-dom';\r\nimport DisplayPost from '../components/DisplayPost/DisplayPost';\r\nimport NewPost from '../components/NewPost/NewPost';\r\n\r\nconst Blog: React.FC = (): JSX.Element => (\r\n  <Container data-testid=\"portalContainer\">\r\n    <Router>\r\n      <div>\r\n        <Navbar collapseOnSelect expand=\"lg\" bg=\"dark\" variant=\"dark\">\r\n          <Link to=\"/\">\r\n            <Navbar.Brand data-testid=\"portalHeader\">Post Portal</Navbar.Brand>\r\n          </Link>\r\n          <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\r\n          <Navbar.Collapse id=\"responsive-navbar-nav\">\r\n            <Nav className=\"mr-auto\" data-testid=\"navigationLink\">\r\n              <Nav.Link as={Link} to=\"/\" data-testid=\"listPostLink\">\r\n                List\r\n              </Nav.Link>\r\n              <Nav.Link as={Link} to=\"/newPost\" data-testid=\"addPostLink\">\r\n                Add Post\r\n              </Nav.Link>\r\n            </Nav>\r\n          </Navbar.Collapse>\r\n        </Navbar>\r\n        <Row>\r\n          <Col xs={12} data-testid=\"portalSubHeader\">\r\n            <h2>Posts Portal!</h2>\r\n          </Col>\r\n        </Row>\r\n        <Row>\r\n          <Col xs={12} data-testid=\"portalDescription\">\r\n            <p>Posts can be added, edited and deleted</p>\r\n          </Col>\r\n        </Row>\r\n        <Switch>\r\n          <Route path=\"/newPost/\" exact component={NewPost} />\r\n          <Route path=\"/\" component={DisplayPost} />\r\n        </Switch>\r\n      </div>\r\n    </Router>\r\n  </Container>\r\n);\r\nexport default Blog;\r\n","import { createMuiTheme } from '@material-ui/core/styles';\r\nimport { Overrides as CoreOverrides } from '@material-ui/core/styles/overrides';\r\nimport { AlertClassKey, AutocompleteClassKey } from '@material-ui/lab';\r\nimport { CSSProperties } from '@material-ui/styles';\r\n\r\ninterface Overrides extends CoreOverrides {\r\n  MuiAlert?:\r\n    | Partial<Record<AlertClassKey, CSSProperties | (() => CSSProperties)>>\r\n    | undefined;\r\n  MuiAutoComplete?:\r\n    | Partial<\r\n        Record<AutocompleteClassKey, CSSProperties | (() => CSSProperties)>\r\n      >\r\n    | undefined;\r\n}\r\n\r\n// default font\r\nexport const fonts = {\r\n  main: 'Open Sans',\r\n  fixedWidth: 'Roboto Mono',\r\n};\r\n\r\nconst customColors = {\r\n  primary: {\r\n    hover: '#4d004d',\r\n  },\r\n  secondary: {\r\n    hover: '#11008f',\r\n  },\r\n};\r\n\r\nconst theme = createMuiTheme({\r\n  palette: {\r\n    primary: {\r\n      main: '#7a1c5b',\r\n    },\r\n    secondary: {\r\n      main: '#0b0157',\r\n    },\r\n  },\r\n});\r\n\r\nconst { palette } = theme;\r\nconst overridesOptions: { overrides: Overrides } = {\r\n  overrides: {\r\n    MuiInput: {\r\n      root: {\r\n        '& > .MuiInput Adornment-positionEnd': {\r\n          marginTop: '0.5rem',\r\n        },\r\n      },\r\n      underline: {\r\n        '&:before': {\r\n          borderBottom: `2px ${customColors.primary.hover} ${palette.divider}`,\r\n        },\r\n        '&:after': {\r\n          borderBottom: `2px ${customColors.secondary.hover} ${palette.primary.dark}`,\r\n        },\r\n      },\r\n    },\r\n  },\r\n};\r\ntheme.overrides = overridesOptions.overrides;\r\nexport default theme;\r\n","import React, { ReactNode } from 'react';\r\nimport { ThemeProvider } from '@material-ui/core/styles';\r\nimport muiTheme from '../styles/theme/getMuiTheme';\r\n\r\nexport interface ThemeWrapperProps {\r\n  children?: ReactNode;\r\n}\r\n\r\nconst ThemeWrapper = ({ children }: ThemeWrapperProps) => (\r\n  <ThemeProvider theme={muiTheme}>{children}</ThemeProvider>\r\n);\r\n\r\nexport default ThemeWrapper;\r\n","import { combineReducers } from '@reduxjs/toolkit';\r\n// eslint-disable-next-line import/no-cycle\r\nimport postReducer from './modules/post';\r\n// eslint-disable-next-line import/no-cycle\r\nimport postsReducer from './modules/posts';\r\n\r\nconst rootReducer = combineReducers({\r\n  posts: postsReducer,\r\n  post: postReducer,\r\n});\r\n\r\nexport type RootState = ReturnType<typeof rootReducer>;\r\nexport default rootReducer;\r\n","import { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\r\nimport {\r\n  persistStore,\r\n  FLUSH,\r\n  REHYDRATE,\r\n  PAUSE,\r\n  PERSIST,\r\n  PURGE,\r\n  REGISTER,\r\n} from 'redux-persist';\r\n// eslint-disable-next-line import/no-cycle\r\nimport rootReducer from './reducers';\r\n\r\n// Main redux store setup\r\nconst store = configureStore({\r\n  reducer: rootReducer,\r\n  middleware: getDefaultMiddleware({\r\n    serializableCheck: {\r\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\r\n    },\r\n  }),\r\n});\r\n\r\nexport type Store = typeof store;\r\nexport type AppDispatch = typeof store.dispatch;\r\nexport const persistor = persistStore(store);\r\nexport default store;\r\n","import React from 'react';\r\nimport Container from 'react-bootstrap/Container';\r\nimport { Provider } from 'react-redux';\r\nimport Blog from './container/Blog';\r\nimport ThemeWrapper from './utils/ThemeWrapper';\r\nimport store from './store';\r\n\r\nfunction App() {\r\n  return (\r\n    <ThemeWrapper>\r\n      <Provider store={store}>\r\n        <Container title=\"mainDiv\">\r\n          <Blog />\r\n        </Container>\r\n      </Provider>\r\n    </ThemeWrapper>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import { ReportHandler } from 'web-vitals';\r\n\r\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\nReactDOM.render(\r\n  <>\r\n    <App />\r\n  </>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}